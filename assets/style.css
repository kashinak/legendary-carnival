/*override browser default margin and padding properties by setting 
them to zero so we can overrride them later when we are desiging 
our elements. This is so the browser has nothing to do with our styles; 
later all the styles are our own styling. '*' selects all elements on the page*/
* {
    /* usually all programmers give margin and padding as 0 to start on css*/
    margin: 0;
    padding: 0;
    /* because css3 is realtively new introduced in 2013, we need to provide 
    certain prefixes so that all browser can run css3*/
    -moz-box-sizing: border-box; /* Firefox */ 
    -ms-box-sizing: border-box; /* Internet Explorer */
    -webkit-box-sizing: border-box; /* Google Chrome & Safari */
    /* from css3, add 'border-box' to instruct the browser to only take margin, 
    padding or border values/pixels inside the element itself and 
    not outside the element which would affect the other elements*/
    box-sizing: border-box;
    -moz-user-select: none; /* Firefox */ 
    -ms-user-select: none; /* Internet Explorer */
    -webkit-user-select: none; /* Google Chrome & Safari */
    /* from css3, add user select 'none' so that the user cannot select any of the elements on the page*/
    user-select: none;
}

/*by selecting 'html', you are selecting the root of the page; the entire page. 
So if you want to set the background color of the entire page you select the 'html' root */
html {
    background-color: #333333;
}

#h1 {
    color: #f2f2f2;
    text-align: center;
    font-size: 90px;
    margin-top: 0px;
    font-weight: bolder;
    /* 'letter-spacing' is kerning between each letter. It overrrides default browser letter spacing.*/
    letter-spacing: 3px;
    /* 'word-spacing' gives spacing between two words */
    word-spacing: 7px;
    /* since this is a shadow for text and not for a box it needs to be called 'text-shadow'. positive values for 'h-shadow' and v-shadow'
    tell shadows to go right and bottom and negative values tell shadows to go left and top. shadows are usually right 
    and bottom so we are providing shadows with positive values. each r g b vale goes from 0-255 opacity goes from 0-1. 
    0 means it is completely transparent and 1 means it is completely opaque. 255 for each rgb value is white and 0 for 
    each rgb value is black*/
    text-shadow: 3px 3px 2px rgba(255, 255, 255, 0.5);
}

/* by giving a velue pf 'float' to each of these block element divs, I can make them 'float' side by side, 
instead of them being on top of each other as naturally occureeing block level div elements do. With 'float' property and 
values we can float an element to the position we give it; in this cas we are telling 'updates' and 'game' divs to float left 
and right next to each other. next we need to add proper margins and padding to bring them to the correct positions*/
#updates {
    float: right;
    font-size: 40px;
    margin: 100px 130px 100px 100px;
}

#timer {
    margin: 50px;
    /* since it is written after 'margin' value, the below 'margin-left' value will override overall margin value of 
    50px and make the margin-left vaue to 45px. that;s why they call it cascading style sheet because what is at the 
    top can be overwritten by what is at the bottom */
    margin-left: 45px;
    text-align: center;
    color: white;
    text-shadow: 1.5px 1.5px 1px rgba(255, 255, 255, 0.5);
}
/* css has collapsing properties when two values merge as the same value such as an upper div 
with margin-bottom: 50px and lower div with margin-top: 50px; you would think you would have 
100 px margins between both divs but since css has a collapsing property. CSS collapses margins 
so if both have the same values of 50px then CSS will count the highest value which is 50px and 
it will cancel out the other 50px value. If one div had 20px and other div had 10px then CSS 
would count 20px between the two divs sharing margins.*/
#score {
    margin: 50px;
    margin-left: 38px;
    color: white;
    /* text-shadow has the following properties: h-shadow v-shadow blur rgbs*/
    text-shadow: 1.5px 1.5px 1px rgba(255, 255, 255, 0.5);
}

#new {
    background-color: #e6e6e6;
    margin: 16px;
    font-size: 40px;
    font-weight: 500;
    text-shadow: 2px 2px 2px rgba(94, 119, 115, 0.82);
    /* border property has the following values: width type color - where width is size of the border, 
    type is type of line such as: solid dashed dotted.*/
    border: 1px solid grey;
    /* box-shadow has the following values: h-shadow v-shadow blur spread rgbs. remeber two positive values 
    will give you a bottom right dropshadow */
    box-shadow: 2px 2px 1px 0px rgba(119, 116, 115, 1);
    font-family: serif;
}

/* whenever you want to choose a hover condtion - what happens to an element when you hover over it, you need to 
add a pseudo selector by selecting the element, add colon then the effect of hover. so when we hover over this 'new' 
game button, what happens? cursor becomes tha hand pointer*/
#new:hover {
    cursor:pointer;
    background-color: #cccccc;
}

#game {
    float: left;
    /* gave it 775px width instead of 750x width to account for 5 * 150 for 5 cards each 150 width, 
    we added some pad to account for the black borders around each card*/
    width: 775px;
    /* give game div a height of 'auto' so it doesn't become problomatic later on, so assigning the value of 'auto' 
    will give it a height as long as it has to go
    height: auto;*/
    height: auto;
    margin: 10px 20px 20px 100px;
    border: 2px solid black;
    /* so that every card has a solid black border, we make the background-color 'black' */
    /* background-color: black; */
    /* a slight change in the color of the shadow for the blue value but everything 
    else is the same as the box-shadow values for the new game button*/
    box-shadow: 4px 4px 3px 0px rgba(119, 116, 128, 1);
}

/*resize all the img files to smaller file becuase they are too big right now. you odn't need to resize outside of 
IDE, you can resize images within your workspace using css*/
img {
    width: 150px;
    height: 105px;
}

/* 'inline' means element does not take up the entire width of the page like 'block' element does. selecting 
'none' makes sure that these divs are not currently displayed; they are disappeared because while we play the game, these are not seen. 
Later we use javascript to turn this on to visible after the game is over*/

#opacity, #result {
    display: none;
}